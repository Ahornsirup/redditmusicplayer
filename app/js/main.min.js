var API,Authentication,BandcampPlayer,Button,Buttons,CommentsView,CurrentSongView,FLAG_DEBUG,KeyboardController,MP3Player,MobileUI,MusicPlayer,NotALink,NotASong,PlayerController,Playlist,PlaylistView,ProgressBar,ProgressBarView,Reddit,Song,SongBandcamp,SongMP3,SongSoundcloud,SongVimeo,SongYoutube,SortMethodView,SoundcloudPlayer,Subreddit,SubredditPlayListView,SubredditPlaylist,SubredditSelectionView,Templates,UIModel,VimeoPlayer,VolumeControl,VolumeControlView,YoutubePlayer,onYouTubeIframeAPIReady,timeSince;window.RMP={},RMP.dispatcher=_.clone(Backbone.Events),$(document).ready(function(){return RMP.dispatcher.trigger("app:main"),RMP.dispatcher.trigger("app:resize")}),$(window).resize(function(){return RMP.dispatcher.trigger("app:resize")}),RMP.dragging=!1,$(window).mouseup(function(){return RMP.dragging=!1,RMP.dispatcher.trigger("events:stopDragging")}),API={Bandcamp:{base:"//api.bandcamp.com/api",key:"vatnajokull"},Soundcloud:{base:"//api.soundcloud.com",key:"5441b373256bae7895d803c7c23e59d9"},Reddit:{base:"//www.reddit.com"}},FLAG_DEBUG=!0,Templates={SubredditPlayListView:_.template("<a class='item' data-category='<%= category %>' data-value='<%= name %>'><%= text %></a>"),PlayListView:_.template("<div class='ui item' data-id='<%= id %>'> <% if (thumbnail) { %> <% if (thumbnail == 'self' || thumbnail == 'default') { %> <% if (type == 'mp3') { %> <i class='left floated icon music large'/> <% } else { %> <i class='left floated icon chat outline large'/> <% } %> <% } else {%> <img src='<%= thumbnail %>' class='ui image rounded left floated'/> <% } %> <% } %> <div class='content'> <div class='title'><%= title %></div> <span class='ups'><%= ups %></span> / <span class='downs'><%= downs %></span> • <span class='author'><%= author %></span> in <span class='subreddit'><%= subreddit %></span> • <span class='created'><%= created_ago %></span> • <span class='origin'><%= domain %></span> • <span class='comments'><%= num_comments %> comments</span> </div> </div>"),CurrentSongView:_.template("<% if (media) { %> <img class='ui image fluid' src='<%= media.oembed.thumbnail_url %>' /> <% } %> <% if (url.indexOf('imgur') >= 0) { %> <a class='ui image fluid' href='<%= url %>' target='_blank'> <img src='<%= url %>' /> </a> <% } %> <div class='vote' id='<%= name %>'> <div class='upvote'><i class='icon up arrow'></i></div> <div class='downvote'><i class='icon down arrow'></i></div> </div> <h3 class='ui header title'><%= title %></h3> <table class='ui table inverted'> <tbody> <% if (media) { %> <tr> <td>Title</td> <td><%= media.oembed.title %></td> </tr> <tr> <td>Description</td> <td><%= media.oembed.description %></td> </tr> <% } %> <tr> <td class='four wide'>Upvotes</td> <td class='thirteen wide'><%= ups %></td> </tr><tr> <td>Downvotes</td> <td><%= downs %></td> </tr><tr> <td>Author</td> <td><%= author %></td> </tr><tr> <td>Timestamp</td> <td><%= subreddit %></td> </tr><tr> <td>Subreddit</td> <td><%= created_ago %> ago</td> </tr><tr> <td>Origin</td> <td><%= domain %></td> </tr><tr> <td>Comments</td> <td><%= num_comments %> comments</td> </tr><tr> <td colspan='2'> <div class='ui 2 fluid tiny buttons'> <a target='_blank' class='permalink ui button' href='http://www.reddit.com<%= permalink %>'> <i class='url icon'></i> Reddit </a> <% if (type == 'link') { %> <a target='_blank' class='ui external button' href='<%= url %>'> <i class='external url icon'></i> Link </a> <% } %> <% if (media) { %> <% if (media && (media.type == 'youtube.com' || media.type == 'youtu.be')) { %> <script src='https://apis.google.com/js/platform.js'></script> <div class='ui youtube tiny button'> <div class='g-ytsubscribe' data-channel='<%= media.oembed.author_name %>' data-layout='default' data-theme='dark' data-count='default'></div> </div> <% } else if (media.type == 'soundcloud.com') { %> <a href='<%= media.oembed.author_url %>' target='_blank' class='ui soundcloud button'> <i class='icon male'></i> <%= media.oembed.author_name %> </a> <% } else if (media.type == 'vimeo.com') { %> <a href='<%= media.oembed.author_url %>' target='_blank' class='ui soundcloud button'> <i class='icon male'></i> <%= media.oembed.author_name %> </a> <% } %> <% } %> </div> </td> </tr> </tbody> </table> <% if (is_self) { %> <div class='ui divider'></div> <div class='self text'> <%= selftext_html %> </div> <% } %>"),CommentsView:_.template("<div class='comment' id='<%= name %>' data-ups='<%= ups %>' data-downs='<%= downs %>'> <div class='vote'> <div class='upvote<% if (likes === true) print(' active') %>'><i class='icon up arrow'></i></div> <div class='downvote<% if (likes === false) print(' active') %>'><i class='icon down arrow'></i></div> </div> <div class='content'> <a class='author'><%= author %></a> <div class='metadata'> <span class='ups'><%= ups %></span>/ <span class='downs'><%= downs %></span> <span class='date'><%= created_ago %> ago</span> </div> <div class='text'><% print(_.unescape(body_html)) %></div> <div class='actions'><a class='reply'>Reply</a></div> </div> </div>"),ReplyTo:_.template("<span class='ui reply_to label inverted black fluid' id='<%= id %>'> Replying to <%= author %> <i class='icon close'></i> </span>"),AuthenticationView:_.template("<div class='item ui dropdown reddit account' id='<%= id %>'> <i class='icon user'></i> <%= name %> <i class='icon dropdown'></i> <div class='menu'> <div class='item'> <%= link_karma %> Link Karma </div> <div class='item'> <%= comment_karma %> Comment Karma </div> <% if (is_gold == true) { %> <div class='item'> Gold Member </div> <% } %> <a class='item sign-out' href='/logout'> <i class='icon off'></i> Log Out </a> </div> </div>")},Reddit=Backbone.Model.extend({defaults:{sortMethod:"hot",topMethod:"month"},vote:function(id,dir){var data;return data={id:id,dir:dir},$.ajax({type:"POST",dataType:"json",url:"/api/vote",data:data,success:function(){return function(resp){return FLAG_DEBUG?console.log(resp):void 0}}(this)})},subreddits:function(){return 0===RMP.subredditplaylist.length?"listentothis":RMP.subredditplaylist.toString()},getMusic:function(callback){var data;return data={},data.sort=this.get("sortMethod"),"top"===this.get("sortMethod")&&(data.t=this.get("topMethod")),FLAG_DEBUG&&console.log("Reddit :: GetMusic :: ",this.subreddits()),$.ajax({dataType:"json",url:""+API.Reddit.base+"/r/"+this.subreddits()+"/"+this.get("sortMethod")+".json?jsonp=?",data:data,success:function(){return function(r){return null!=r.error?console.error("Reddit :: "+r.error.type+" :: "+r.error.message):callback(r.data.children)}}(this)})},getMore:function(last,callback){var data;return data={},data.sort=this.get("sortMethod"),"top"===this.get("sortMethod")&&(data.t=this.get("topMethod")),data.after=last,$.ajax({dataType:"json",url:""+API.Reddit.base+"/r/"+this.subreddits()+"/"+this.get("sortMethod")+".json?jsonp=?",data:data,success:function(){return function(r){return null!=r.error?console.error("Reddit :: "+r.error.type+" :: "+r.error.message):callback(r.data.children)}}(this)})},getComments:function(permalink,callback){var data,url;return data={},data.sort=this.get("sortMethod"),"top"===this.get("sortMethod")&&(data.t=this.get("topMethod")),url=""+API.Reddit.base+permalink+".json?jsonp=?",null!=RMP.authentication&&(url="/api/comments"),null!=RMP.authentication&&(data.permalink=permalink),$.ajax({dataType:"json",url:url,data:data,success:function(){return function(r){return null!=r.error?console.error("Reddit :: "+r.error.type+" :: "+r.error.message):callback(r[1].data.children)}}(this)})},addComment:function(params){var data;return data={text:params.text,thing_id:params.thing_id},$.ajax({type:"POST",dataType:"json",url:"/api/add_comment",data:data,success:function(){return function(r){return null!=r.error?console.error("Reddit :: "+r.error.type+" :: "+r.error.message):params.callback(r)}}(this)})},changeSortMethod:function(sortMethod,topMethod){return this.set("sortMethod",sortMethod),this.set("topMethod",topMethod)},save:function(){var e;try{return localStorage.sortMethod=this.get("sortMethod"),localStorage.topMethod=this.get("topMethod")}catch(_error){return e=_error,console.error(e)}},initialize:function(){return null!=localStorage.sortMethod&&this.set("sortMethod",localStorage.sortMethod),null!=localStorage.topMethod&&this.set("topMethod",localStorage.topMethod),("top"!==this.get("sortMethod")||"hot"!==this.get("sortMethod")||"new"!==this.get("sortMethod"))&&(this.changeSortMethod("hot","week"),this.save()),this.listenTo(this,"change",this.save)}}),RMP.reddit=new Reddit,Authentication=Backbone.Model.extend({template:Templates.AuthenticationView,initialize:function(){return this.$el=$(".titlebar .authentication"),this.$=function(selector){return $(".titlebar .authentication "+selector)},this.get("name")?(this.$el.html(this.template(this.attributes)),this.$(".ui.dropdown").dropdown()):void 0}}),RMP.dispatcher.on("app:page",function(category,page){return null!=RMP.authentication?$(".titlebar .authentication .sign-out").attr("href","/logout?redirect=/"+page):$(".titlebar .authentication .log-in").attr("href","/login?redirect=/"+page)}),ProgressBar=Backbone.Model.extend({defaults:{loaded:0,current:0,duration:60,currentSongID:-1},setDuration:function(data){return this.set("duration",data),this.set("current",0)},setLoaded:function(data){return this.set("loaded",data)},setCurrent:function(data){return this.set("current",data)},change:function(index,song){return song.get("id")!==this.get("currentSongID")&&song.get("playable")===!0?(this.setCurrent(0),this.setLoaded(0),this.setDuration(60),this.set("currentSongID",song.get("id")),$(".controls .progress").removeClass("soundcloud")):void 0},enableSoundcloud:function(waveform){return $(".controls .progress").addClass("soundcloud"),$(".controls .progress .waveform").css("-webkit-mask-box-image","url("+waveform+")")},initialize:function(){return FLAG_DEBUG&&console.log("ProgressBar :: Ready"),this.listenTo(RMP.dispatcher,"song:change",this.change),this.listenTo(RMP.dispatcher,"progress:current",this.setCurrent),this.listenTo(RMP.dispatcher,"progress:loaded",this.setLoaded),this.listenTo(RMP.dispatcher,"progress:duration",this.setDuration)}}),ProgressBarView=Backbone.View.extend({events:{"mousemove .progress":"seeking","mousedown .progress":"startSeeking"},justSeeked:!1,startSeeking:function(e){return RMP.dragging=!0,this.percentage=e.offsetX/this.$(".progress").outerWidth(),this.justSeeked=!0},seeking:function(e){return this.justSeeked?(this.percentage=e.offsetX/this.$(".progress").outerWidth(),RMP.dragging&&RMP.dispatcher.trigger("progress:set",this.percentage,!RMP.dragging),this.$(".progress .current").css("width",100*this.percentage+"%")):void 0},stopSeeking:function(){return this.justSeeked?(RMP.dispatcher.trigger("progress:set",this.percentage,!RMP.dragging),FLAG_DEBUG&&RMP.dragging===!1&&console.log("ProgressBarView :: Seek :: "+100*this.percentage+"%"),this.justSeeked=!1):void 0},toMinSecs:function(secs){var hours,mins;return hours=Math.floor(secs/3600),hours?(mins=Math.floor(secs/60-60*hours),secs=Math.floor(secs%60),""+String("0"+hours).slice(-2)+":"+String("0"+mins).slice(-2)+":"+String("0"+secs).slice(-2)):(mins=Math.floor(secs/60),secs=Math.floor(secs%60),""+String("0"+mins).slice(-2)+":"+String("0"+secs).slice(-2))},resize:function(){var itemWidth;return itemWidth=$(".controls .left .item").outerWidth(),this.$(".progress").css("width",$("body").innerWidth()-7*itemWidth)},render:function(){return this.$(".end.time").text(this.toMinSecs(this.model.get("duration"))),this.$(".progress .loaded").css("width",100*this.model.get("loaded")+"%"),this.$(".start.time").text(this.toMinSecs(this.model.get("current"))),this.$(".progress .current").css("width",this.model.get("current")/this.model.get("duration")*100+"%")},initialize:function(){return this.resize(),FLAG_DEBUG&&console.log("ProgressBarView :: Ready"),this.listenTo(this.model,"change",this.render),this.listenTo(RMP.dispatcher,"app:resize",this.resize),this.listenTo(RMP.dispatcher,"events:stopDragging",this.stopSeeking)}}),RMP.progressbar=new ProgressBar,RMP.progressbarview=new ProgressBarView({el:$(".controls .middle.menu"),model:RMP.progressbar}),Button=Backbone.View.extend({events:{click:"click"},click:function(e){return RMP.dispatcher.trigger(this.attributes.clickEvent,e)},stateChange:function(data){return FLAG_DEBUG&&console.log("Button :: StateChange",data),this.checkState(data)===!0?this.$el.addClass("active"):this.$el.removeClass("active")},initialize:function(){return this.checkState=this.attributes.checkState,null!=this.attributes.listenEvent?this.listenTo(RMP.dispatcher,this.attributes.listenEvent,this.stateChange):void 0}}),Buttons=Backbone.Model.extend({initialize:function(){return this.backward=new Button({el:$(".controls .backward.button"),attributes:{clickEvent:"controls:backward"}}),this.forward=new Button({el:$(".controls .forward.button"),attributes:{clickEvent:"controls:forward"}}),this.play=new Button({el:$(".controls .play.button"),attributes:{clickEvent:"controls:play",listenEvent:"player:playing player:paused player:ended",checkState:function(player){return player===window&&(player=RMP.player.controller),"youtube"===player.type?1===player.player.getPlayerState():"playing"===player.playerState}}})}}),VolumeControl=Backbone.Model.extend({defaults:{volume:1,size:100},volumeChange:function(){var e;RMP.dispatcher.trigger("controls:volume",this.get("volume"));try{return localStorage.volume=this.get("volume")}catch(_error){return e=_error,console.error(e)}},initialize:function(){return this.listenTo(this,"change:volume",this.volumeChange),null!=localStorage.volume?this.set("volume",localStorage.volume):void 0}}),VolumeControlView=Backbone.View.extend({events:{"click .volume-control":"click"},click:function(e){var current,max,ratio;return max=this.model.get("size"),current=-1*(e.offsetY-max),ratio=current/max,this.model.set("volume",ratio)},render:function(){return this.$(".volume-bar").css("height",this.model.get("volume")*this.model.get("size")+"px"),this.$(".icon.volume").removeClass("off up down").addClass(this.model.get("volume")>=.5?"up":this.model.get("volume")<=.1?"off":"down")},initialize:function(){return this.listenTo(this.model,"change:volume",this.render),this.render()}}),RMP.volumecontrol=new VolumeControlView({model:new VolumeControl,el:$(".controls .volume.button")}),RMP.buttons=new Buttons,UIModel=Backbone.View.extend({tagName:"div",className:"container",cache:{},events:{"click .switcher .item":"open"},open:function(e){var item,page;return item=$(e.currentTarget),page=item.data("page"),this.navigate(page)},load:function(page,callback,ignoreCache){return page in this.cache&&(ignoreCache===!1||null==ignoreCache)?callback(this.cache[page]):(FLAG_DEBUG&&console.log("UI :: Load :: ",page),$.get("/"+page,function(_this){return function(data){return _this.cache[page]=data,callback(data)}}(this)))},navigate:function(page){return this.load(page,function(_this){return function(data){return _this.render(data,page)}}(this))},getElement:function(page){return this.$("[data-page="+page+"]")},render:function(data,page){return this.$el.html(data.content),this.$el.find(".ui.dropdown").dropdown(),RMP.dispatcher.trigger("loaded:"+page)},initialize:function(){return FLAG_DEBUG&&console.log("UI :: Ready"),$(".ui.dropdown").dropdown(),this.listenTo(RMP.dispatcher,"app:page",this.navigate)}}),RMP.ui=[new UIModel({el:$(".ui.container.one")}),new UIModel({el:$(".ui.container.two")}),new UIModel({el:$(".ui.container.three")})],MobileUI=Backbone.View.extend({tagName:"div",className:"mobilebar",events:{"click .item":"click"},click:function(e){var container,item,page;return item=$(e.currentTarget),console.log(item),page=item.data("page"),container=$(".ui.container[data-page="+page+"]"),$(".ui.container").removeClass("active"),container.addClass("active"),this.$(".item").removeClass("active"),item.addClass("active")},initialize:function(){return FLAG_DEBUG?console.log("MobileUI :: Ready"):void 0}}),RMP.mobileui=new MobileUI({el:$(".ui.mobilebar")}),RMP.dispatcher.on("loaded:about",function(){return $(".start.listening").click(function(){return FLAG_DEBUG&&console.log("About :: Start Listening"),RMP.dispatcher.trigger("controls:play"),RMP.sidebar.open("playlist")})}),RMP.dispatcher.on("app:main",function(){return $(".ui.container").each(function(i,el){var item;return item=$(el),RMP.dispatcher.trigger("loaded:"+item.data("page"))})}),Subreddit=Backbone.Model.extend({defaults:{category:null,name:null,text:null},idAttribute:"name",toString:function(){return this.escape("name")},initialize:function(){return FLAG_DEBUG?console.log("Subreddit :: Created"):void 0}}),SubredditPlaylist=Backbone.Collection.extend({model:Subreddit,localStorage:new Backbone.LocalStorage("Subreddits"),toString:function(){return RMP.subredditplaylist.pluck("name").join("+")},initialize:function(){return FLAG_DEBUG&&console.log("SubredditPlaylist :: Ready"),this.listenTo(this,"add",this.save),this.listenTo(this,"remove",this.save)}}),SubredditPlayListView=Backbone.View.extend({tagName:"div",className:"selection",events:{"click .menu.selection .item":"remove"},remove:function(e){var currentReddit;return currentReddit=e.currentTarget.dataset.value,RMP.subredditplaylist.get(currentReddit).destroy(),RMP.subredditplaylist.remove(RMP.subredditplaylist.get(currentReddit))},template:Templates.SubredditPlayListView,render:function(){return this.$(".menu.selection").html(""),RMP.subredditplaylist.each(function(_this){return function(model){return _this.$(".menu.selection").append(_this.template(model.toJSON()))}}(this))},initialize:function(){return this.listenTo(RMP.subredditplaylist,"add",this.render),this.listenTo(RMP.subredditplaylist,"remove",this.render),FLAG_DEBUG?console.log("SubredditPlayListView :: Ready"):void 0}}),SubredditSelectionView=Backbone.View.extend({tagName:"div",className:"selection",events:{"click .menu.selection .item":"open"},open:function(e){var currentReddit,target;return target=$(e.currentTarget),currentReddit=new Subreddit({category:this.category,name:target.data("value"),text:target.text()}),target.hasClass("active")?(RMP.subredditplaylist.get(currentReddit).destroy(),RMP.subredditplaylist.remove(currentReddit)):(RMP.subredditplaylist.add(currentReddit),RMP.subredditplaylist.get(currentReddit).save()),FLAG_DEBUG&&console.log("Subreddit :: Changed :: "+currentReddit),this.render()},category:"Default",reddits:[],render:function(){var redditsInThisCategory,redditsInThisCategoryByName;return redditsInThisCategory=RMP.subredditplaylist.where({category:this.category}),0!==redditsInThisCategory?(redditsInThisCategoryByName=_.pluck(_.pluck(redditsInThisCategory,"attributes"),"name"),this.activeReddits=_.intersection(redditsInThisCategoryByName,this.reddits),this.$(".menu .item").removeClass("active"),_.each(this.activeReddits,function(_this){return function(element){return _this.$(".menu .item[data-value='"+element+"']").addClass("active")}}(this))):void 0},initialize:function(){return this.category=this.$el.data("category"),this.reddits=$.map(this.$(".selection.menu .item"),function(o){return $(o).data("value")}),this.render(),this.listenTo(RMP.subredditplaylist,"add",this.render),this.listenTo(RMP.subredditplaylist,"remove",this.render),FLAG_DEBUG?console.log("Subreddit :: View Made"):void 0}}),RMP.subredditsSelection=[],RMP.subredditplaylist=new SubredditPlaylist,RMP.subredditplaylistview=new SubredditPlayListView({el:$(".content.browse .my.reddit.menu")}),RMP.dispatcher.on("loaded:browse",function(){return RMP.subredditsSelection=[],FLAG_DEBUG&&console.time("Making Views"),$(".content.browse .reddit.subreddits.menu").each(function(index,element){return RMP.subredditsSelection.push(new SubredditSelectionView({el:element}))}),FLAG_DEBUG&&console.timeEnd("Making Views"),RMP.subredditplaylistview.setElement($(".content.browse .my.reddit.menu")),RMP.subredditplaylist.length>0?RMP.subredditplaylistview.render():void 0}),RMP.dispatcher.on("app:main",function(){var sub,_i,_len,_ref;if(null!=RMP.URLsubreddits)for(RMP.subredditplaylist.reset(),_ref=RMP.URLsubreddits,_i=0,_len=_ref.length;_len>_i;_i++)sub=_ref[_i],RMP.subredditplaylist.add(new Subreddit({category:"url",name:sub,text:sub}));else RMP.subredditplaylist.fetch();return 0===RMP.subredditplaylist.length?RMP.subredditplaylist.add(new Subreddit({category:"Other",name:"listentothis",text:"Listen To This"})):void 0}),timeSince=function(time){var interval,seconds;return seconds=Math.floor((new Date-time)/1e3),interval=Math.floor(seconds/31536e3),interval>1?""+interval+" years":(interval=Math.floor(seconds/2592e3),interval>1?""+interval+" months":(interval=Math.floor(seconds/86400),interval>1?""+interval+" days":(interval=Math.floor(seconds/3600),interval>1?""+interval+" hours":(interval=Math.floor(seconds/60),interval>1?""+interval+" minutes":""+Math.floor(seconds)+" seconds"))))},Song=Backbone.Model.extend({type:"none",playable:!1,initialize:function(){var time;return time=new Date,time.setTime(1e3*parseInt(this.get("created_utc"))),this.set("created_ago",timeSince(time)),this.set("type",this.type),this.set("playable",this.playable)}}),SongYoutube=Song.extend({type:"youtube",playable:!0}),SongSoundcloud=Song.extend({type:"soundcloud",playable:!0}),SongBandcamp=Song.extend({type:"bandcamp",playable:!0}),SongMP3=Song.extend({type:"mp3",playable:!0}),SongVimeo=Song.extend({type:"vimeo",playable:!0}),NotASong=Backbone.Model.extend({type:"link",playable:!1,initialize:function(){var time;return time=new Date,time.setTime(1e3*parseInt(this.get("created_utc"))),this.set("created_ago",timeSince(time)),this.set("type",this.type),this.set("playable",this.playable)}}),NotALink=NotASong.extend({type:"self"}),Playlist=Backbone.Collection.extend({current:{song:null,index:-1},parseSong:function(item){var song;return song=function(){switch(!1){case!("youtube.com"===item.domain||"youtu.be"===item.domain||"m.youtube.com"===item.domain):return new SongYoutube(item);case"soundcloud.com"!==item.domain:return new SongSoundcloud(item);case"bandcamp.com"!==item.domain.substr(-12):return new SongBandcamp(item);case".mp3"!==item.url.substr(-4):return new SongMP3(item);case"vimeo.com"!==item.domain:return new SongVimeo(item);case!item.is_self:return new NotALink(item);default:return new NotASong(item)}}()},activate:function(song){var index;return index=_.indexOf(this.models,song),this.current.song=song,this.current.index=index,RMP.dispatcher.trigger("song:change",index,song),this.current.index>=this.length-1?this.more():void 0},refresh:function(){return RMP.reddit.getMusic(function(_this){return function(items){var list;return list=[],_.each(items,function(item){return list.push(_this.parseSong(item.data))}),_this.reset(list),RMP.dispatcher.trigger("app:loadedMusic")}}(this))},more:function(callback){return RMP.reddit.getMore(this.last().get("name"),function(_this){return function(items){return FLAG_DEBUG&&console.log(items),_.each(items,function(item){return _this.add(_this.parseSong(item.data))}),null!=callback?callback():void 0}}(this))},forward:function(){return this.current.index>=this.length-1?this.more(function(_this){return function(){return _this.forward()}}(this)):(this.current.index++,this.current.song=this.at(this.current.index),this.current.song.get("playable")===!1?this.forward():this.activate(this.current.song))},backward:function(){return this.current.index-1<=0?(this.current.song=this.at(this.current.index-1),this.current.song.get("playable")===!0?(this.current.index=0,this.activate(this.current.song)):void 0):(this.current.index--,this.current.song=this.at(this.current.index),this.current.song.get("playable")===!1?this.backward():this.activate(this.current.song))},playFirstSongIfEmpty:function(){return-1===this.current.index?this.forward():void 0},initialize:function(){return this.listenTo(RMP.subredditplaylist,"add",this.refresh),this.listenTo(RMP.subredditplaylist,"remove",this.refresh),this.listenTo(RMP.dispatcher,"controls:forward",this.forward),this.listenTo(RMP.dispatcher,"controls:backward",this.backward),this.listenTo(RMP.dispatcher,"controls:sortMethod",this.refresh),this.listenTo(RMP.dispatcher,"controls:play",this.playFirstSongIfEmpty),this.listenTo(RMP.dispatcher,"player:ended",this.forward),FLAG_DEBUG?console.log("Playlist :: Ready"):void 0}}),PlaylistView=Backbone.View.extend({tagName:"div",className:"playlist",events:{"click .ui.item":"activate","click .item.more":"more"},more:function(){return RMP.playlist.more()},activate:function(e){var id,song,target;return target=$(e.currentTarget),id=target.data("id"),song=RMP.playlist.get(id),RMP.playlist.activate(song)},template:Templates.PlayListView,render:function(){return this.$el.html(""),RMP.playlist.each(function(_this){return function(model){return _this.$el.append(_this.template(model.toJSON()))}}(this)),this.$el.append($("<div class='item more'>Load More</div>")),this.setCurrent(RMP.playlist.current.index,RMP.playlist.current.song)},setCurrent:function(index){return this.$(".item").removeClass("active"),$(this.$(".item")[index]).addClass("active")},initialize:function(){return this.listenTo(RMP.playlist,"add",this.render),this.listenTo(RMP.playlist,"remove",this.render),this.listenTo(RMP.playlist,"reset",this.render),this.listenTo(RMP.dispatcher,"song:change",this.setCurrent),FLAG_DEBUG?console.log("PlayListView :: Ready"):void 0}}),SortMethodView=Backbone.View.extend({events:{"click .item":"select"},getCurrent:function(){return this.$("[data-value='"+RMP.reddit.get("sortMethod")+"']")},render:function(){return this.$(".item").removeClass("active"),this.getCurrent().addClass("active"),this.$(".ui.dropdown").dropdown("set selected","top:"+RMP.reddit.get("topMethod"))},select:function(e){var method,sortMethod,target,topMethod;return target=$(e.currentTarget),method=target.data("value"),null!=method?(sortMethod=method,topMethod=RMP.reddit.get("topMethod"),"top"===method.substr(0,3)&&(sortMethod="top",topMethod=method.substr(4)),RMP.reddit.changeSortMethod(sortMethod,topMethod),RMP.dispatcher.trigger("controls:sortMethod",sortMethod,topMethod),this.render()):void 0},initialize:function(){return this.render()}}),RMP.playlist=new Playlist,RMP.playlistview=new PlaylistView({el:$(".content.playlist .music.playlist")}),RMP.sortmethodview=new SortMethodView({el:$(".content.playlist .sortMethod")}),RMP.dispatcher.on("loaded:playlist",function(){return RMP.playlistview.setElement($(".content.playlist .music.playlist")),RMP.playlist.length>0&&RMP.playlistview.render(),RMP.sortmethodview.setElement($(".content.playlist .sortMethod")),RMP.sortmethodview.render()}),CurrentSongView=Backbone.View.extend({template:Templates.CurrentSongView,events:{"click .upvote":"vote","click .downvote":"vote"},vote:function(e){var dir,id,parent,target;return target=$(e.currentTarget),parent=target.parents(".vote"),id=parent.attr("id"),dir=function(){switch(!1){case!target.hasClass("active"):return 0;case!target.hasClass("upvote"):return 1;case!target.hasClass("docuwnvote"):return-1}}(),RMP.reddit.vote(id,dir),$(parent.find(".upvote, .downvote")).removeClass("active"),1===dir||-1===dir?target.addClass("active"):void 0},render:function(index,song){var songJSON;return null==song&&(song=RMP.playlist.current.song),null!=song?(songJSON=song.toJSON(),this.$el.html(this.template(songJSON)),$(".self.text").html($($(".self.text").text())),song.playable===!0?($(".current-song-sidebar .title").text(songJSON.title),document.title=""+songJSON.title+" | Reddit Music Player","bandcamp"===song.get("type")?$(".current-song-sidebar .image").attr("src",song.get("media").oembed.thumbnail_url):$(".current-song-sidebar .image").attr("src","")):void 0):void 0},initialize:function(){return this.listenTo(RMP.dispatcher,"song:change",this.render),FLAG_DEBUG?console.log("CurrentSongView :: Ready"):void 0}}),CommentsView=Backbone.View.extend({template:Templates.CommentsView,events:{"click .upvote":"vote","click .downvote":"vote","click .actions .reply":"reply","click .form .add_comment":"add_comment","click .reply_to .close":"reply_close"},reply:function(e){var id,parent,target,temp;return target=$(e.currentTarget),parent=target.parents(".comment"),id=parent.attr("id"),this.reply_id=id,this.reply_author=$(parent.find(".author")).text(),this.$(".reply_to").remove(),temp=Templates.ReplyTo({author:this.reply_author,id:this.reply_id}),this.$el.append(temp)},reply_close:function(e){var target;return target=$(e.currentTarget.parentElement),this.reply_id=this.reply_author=null,target.remove()},add_comment:function(e){var id,parent,target,text;return target=$(e.currentTarget),parent=target.parents(".comment"),id=parent.attr("id"),null==this.reply_id&&(this.reply_id=RMP.playlist.current.song.get("name")),text=this.$(".comment_text").val(),this.$(".comment_text").val(""),RMP.reddit.addComment({text:text,thing_id:this.reply_id,callback:function(_this){return function(reply){return RMP.playlist.current.song.set("num_comments",RMP.playlist.current.song.get("num_comments")+1),FLAG_DEBUG&&console.log(reply),_this.render()}}(this)})},vote:function(e){var dir,dirClass,dirEl,id,initial,parent,target;return target=$(e.currentTarget),parent=target.parents(".comment"),id=parent.attr("id"),dir=function(){switch(!1){case!target.hasClass("active"):return 0;case!target.hasClass("upvote"):return 1;case!target.hasClass("downvote"):return-1}}(),RMP.reddit.vote(id,dir),$(parent.find(".upvote, .downvote")).removeClass("active"),$(parent.find(".ups")).text(parent.data("ups")),$(parent.find(".downs")).text(parent.data("downs")),1===dir||-1===dir?(dirClass=1===dir?"ups":"downs",dirEl=$(parent.find("."+dirClass)),initial=parent.data(dirClass),dirEl.text(parseInt(initial)+1),target.addClass("active")):void 0},renderComment:function(comment){var html,time;return time=new Date,time.setTime(1e3*parseInt(comment.created_utc)),comment.created_ago=timeSince(time),html=$(this.template(comment)),FLAG_DEBUG&&console.log(comment),"object"==typeof comment.replies&&html.append(this.parse(comment.replies.data.children)),html},parse:function(comments){var root;return root=$("<div class='comments'></div>"),_.each(comments,function(_this){return function(comment){return root.append(_this.renderComment(comment.data))}}(this)),root},render:function(index,song){var permalink,songJSON;return null==song&&(song=RMP.playlist.current.song),null!=song?(songJSON=song.toJSON(),this.$(".num_comments").text(songJSON.num_comments),this.$(".comments.overview").html(""),permalink=songJSON.permalink,songJSON.num_comments>0?RMP.reddit.getComments(permalink,function(_this){return function(comments_tree){return _.each(comments_tree,function(comment){return _this.$(".comments.overview").append(_this.renderComment(comment.data))})}}(this)):void 0):void 0},initialize:function(){return this.listenTo(RMP.dispatcher,"song:change",this.render),FLAG_DEBUG?console.log("CommentsView :: Ready"):void 0}}),RMP.currentsongview=new CurrentSongView({el:$(".content.playlist .current.song")}),RMP.commentsview=new CommentsView({el:$(".content.playlist .comments.root")}),RMP.dispatcher.on("loaded:playlist",function(){return RMP.currentsongview.setElement($(".content.song .current.song")),RMP.currentsongview.render(),RMP.commentsview.setElement($(".content.song .comments.root")),RMP.commentsview.render()}),MusicPlayer=Backbone.Model.extend({type:"none"}),YoutubePlayer=MusicPlayer.extend({type:"youtube",onPlayerReady:function(e){return e.target.playVideo()},onPlayerStateChange:function(e){switch(FLAG_DEBUG&&console.log("YoutubePlayer :: StateChange",e),e.data){case YT.PlayerState.UNSTARTED:return RMP.dispatcher.trigger("player:unstarted",this);case YT.PlayerState.PLAYING:return RMP.dispatcher.trigger("player:playing",this);case YT.PlayerState.PAUSED:return RMP.dispatcher.trigger("player:paused",this);case YT.PlayerState.ENDED:return RMP.dispatcher.trigger("player:ended",this);case YT.PlayerState.CUED:return RMP.dispatcher.trigger("player:cued",this);case YT.PlayerState.BUFFERING:return RMP.dispatcher.trigger("player:buffering",this)
}},onError:function(e){return FLAG_DEBUG&&console.error("YoutubePlayer :: Error",e),RMP.dispatcher.trigger("controls:forward")},events:function(){return{onReady:this.onPlayerReady,onStateChange:this.onPlayerStateChange,onError:this.onError}},init:function(){var isReady;if(isReady="undefined"!=typeof YT&&null!==YT,!isReady)throw"Youtube not Ready!";return this.player=new YT.Player("player",{videoId:this.track.id,events:this.events()})},initProgress:function(){var getData;return this.player.setVolume(100*RMP.volumecontrol.model.get("volume")),RMP.dispatcher.trigger("progress:duration",this.player.getDuration()),getData=function(_this){return function(){return RMP.dispatcher.trigger("progress:current",_this.player.getCurrentTime()),RMP.dispatcher.trigger("progress:loaded",_this.player.getVideoLoadedFraction())}}(this),null==this.interval&&(this.interval=setInterval(getData,200)),FLAG_DEBUG?console.log("YoutubePlayer :: Interval Set :: "+this.interval):void 0},clean:function(){return this.player.destroy(),clearInterval(this.interval),this.interval=null,this.stopListening(),this.off(),this.trigger("destroy")},"switch":function(song){return this.set(song.attributes),this.track=this.attributes.media.oembed,this.track.id=this.track.url.substr(31),this.player.loadVideoById(this.track.id)},playPause:function(){return this.player&&null!=this.player.getPlayerState&&null!=this.player.pauseVideo&&null!=this.player.playVideo?1===this.player.getPlayerState()?this.player.pauseVideo():this.player.playVideo():void 0},volume:function(value){return this.player.setVolume(100*value)},seekTo:function(percentage,seekAhead){return this.player.seekTo(percentage*this.player.getDuration(),seekAhead)},initialize:function(){return null==this.$el&&(this.$el=$("#player")),this.track=this.attributes.media.oembed,this.track.id=this.track.url.substr(31),this.init(),this.listenTo(RMP.dispatcher,"player:playing",this.initProgress),FLAG_DEBUG&&console.log("YoutubePlayer :: ",this.track),FLAG_DEBUG?console.log("Player :: Youtube"):void 0}}),SoundcloudPlayer=MusicPlayer.extend({type:"soundcloud",events:function(){return{playProgress:this.progress_play,play:this.event_trigger("playing"),pause:this.event_trigger("paused"),finish:this.event_trigger("ended")}},progress_play:function(data){return RMP.dispatcher.trigger("progress:current",data.currentPosition/1e3),RMP.dispatcher.trigger("progress:loaded",data.loadedProgress)},playerState:"ended",event_trigger:function(ev){return function(_this){return function(){return _this.player.setVolume(100*RMP.volumecontrol.model.get("volume")),_this.player.getDuration(function(duration){return RMP.dispatcher.trigger("progress:duration",duration/1e3)}),_this.playerState=ev,RMP.dispatcher.trigger("player:"+ev,_this)}}(this)},playPause:function(){return this.player.toggle()},volume:function(value){return this.player.setVolume(100*value)},seekTo:function(percentage){return this.player.getDuration(function(_this){return function(duration){return _this.player.seekTo(percentage*duration)}}(this))},"switch":function(song){return this.set(song.attributes),this.init(function(_this){return function(){return _this.player.load(_this.track.sc.uri,{auto_play:!0})}}(this))},setUp:function(callback){var iframe;return null==this.player&&(FLAG_DEBUG&&console.log("setting up iframe"),0===$("#soundcloud").length&&(iframe=$("<iframe id='soundcloud' src='//w.soundcloud.com/player/?visual=true&url="+this.track.sc.uri+"'>").appendTo($("#player"))),this.player=SC.Widget("soundcloud"),_.each(this.events(),function(_this){return function(listener,ev){return _this.player.bind(ev,listener)}}(this))),null!=callback?callback():void 0},clean:function(){return this.$el.html(""),this.stopListening(),this.off(),this.trigger("destroy")},init:function(callback){var track_id,url,user_id;return this.track=this.attributes.media.oembed,url=decodeURIComponent(decodeURIComponent(this.track.html)),user_id=url.match(/\/users\/(\d+)/),null!=user_id&&(this.track.type="users"),null!=user_id&&(this.track.id=user_id[1]),track_id=url.match(/\/tracks\/(\d+)/),null!=track_id&&(this.track.type="tracks"),null!=track_id&&(this.track.id=track_id[1]),track_id=url.match(/\/playlists\/(\d+)/),null!=track_id&&(this.track.type="playlists"),null!=track_id&&(this.track.id=track_id[1]),console.log(this.track),$.ajax({url:""+API.Soundcloud.base+"/"+this.track.type+"/"+this.track.id+".json?callback=?",jsonp:"callback",dataType:"jsonp",data:{client_id:API.Soundcloud.key},success:function(_this){return function(sctrack){if(FLAG_DEBUG&&console.log(sctrack),!sctrack.streamable)throw"not streamable";return _this.track.sc=sctrack,RMP.progressbar.enableSoundcloud(_this.track.sc.waveform_url),_this.setUp(callback)}}(this)})},initialize:function(){return null==this.$el&&(this.$el=$("#player")),this.init(function(_this){return function(){return _this.player.load(_this.track.sc.uri,{auto_play:!0})}}(this))}}),MP3Player=MusicPlayer.extend({type:"mp3",events:function(){return{progress:this.progress_play(),play:this.event_trigger("playing"),playing:this.event_trigger("playing"),pause:this.event_trigger("paused"),ended:this.event_trigger("ended"),durationchange:this.setDuration()}},setDuration:function(){return function(_this){return function(){return RMP.dispatcher.trigger("progress:duration",_this.player.duration)}}(this)},progress_play:function(){return function(_this){return function(){return RMP.dispatcher.trigger("progress:loaded",_this.player.buffered.end(0)/_this.player.duration),RMP.dispatcher.trigger("progress:current",_this.player.currentTime)}}(this)},playerState:"ended",event_trigger:function(ev){return function(_this){return function(){return _this.playerState=ev,RMP.dispatcher.trigger("player:"+ev,_this)}}(this)},init:function(){return FLAG_DEBUG&&console.log("MP3Player :: Making Player"),this.player=$("<audio controls autoplay='true' src='"+this.attributes.streaming_url+"'/>").appendTo(this.$el)[0],FLAG_DEBUG&&console.log(this.$el),this.player.play(),this.player.volume=RMP.volumecontrol.model.get("volume"),_.each(this.events(),function(_this){return function(listener,ev){return $(_this.player).bind(ev,listener)}}(this))},clean:function(justTheElement){return $(this.player).remove(),this.$el.html(""),null==justTheElement&&this.stopListening(),null==justTheElement&&this.trigger("destroy"),justTheElement?void 0:this.off},"switch":function(song){return this.set(song.attributes),this.set("streaming_url",this.get("url")),this.clean(!0),this.init()},playPause:function(){return"playing"===this.playerState?this.player.pause():this.player.play()},volume:function(value){return this.player.volume=value},seekTo:function(percentage){return this.player.currentTime=percentage*this.player.duration},initialize:function(){return null==this.$el&&(this.$el=$("#player")),this.$el.html(""),this.set("streaming_url",this.get("url")),this.init()}}),BandcampPlayer=MP3Player.extend({type:"bandcamp",getID:function(callback){return $.ajax({url:""+API.Bandcamp.base+"/url/1/info",jsonp:"callback",dataType:"jsonp",data:{key:API.Bandcamp.key,url:this.get("url")},success:function(_this){return function(data){return _this.set(data),callback(data)}}(this)})},getAlbumInfo:function(callback){return $.ajax({url:""+API.Bandcamp.base+"/album/2/info",jsonp:"callback",dataType:"jsonp",data:{key:API.Bandcamp.key,album_id:this.get("album_id")},success:function(_this){return function(data){return _this.set(data),_this.set(data.tracks[0]),callback(data)}}(this)})},getTrackInfo:function(callback){return $.ajax({url:""+API.Bandcamp.base+"/track/3/info",jsonp:"callback",dataType:"jsonp",data:{key:API.Bandcamp.key,track_id:this.get("track_id")},success:function(_this){return function(data){return _this.set(data),callback(data)}}(this)})},errorAvoidBandCamp:function(ids){return console.error("BandCampPlayer :: Error",ids.error_message),SongBandcamp.prototype.playable=!1,_.each(RMP.playlist.where({type:"bandcamp"}),function(item){return item.set("playable",!1)}),RMP.dispatcher.trigger("controls:forward")},getInfo:function(callback){return this.getID(function(_this){return function(ids){return null!=ids.error?_this.errorAvoidBandCamp(ids):(FLAG_DEBUG&&console.log("BandCampPlayer :: IDs Get"),null!=ids.track_id?(FLAG_DEBUG&&console.log("BandCampPlayer :: Get Track Info"),_this.getTrackInfo(callback)):(FLAG_DEBUG&&console.log("BandCampPlayer :: No Track ID",ids),null!=ids.album_id?(FLAG_DEBUG&&console.log("BandCampPlayer :: Get Album Info"),_this.getAlbumInfo(callback)):void 0))}}(this))},"switch":function(song){return this.set(song.attributes),this.clean(!0),this.getInfo(function(_this){return function(){return RMP.dispatcher.trigger("progress:duration",_this.get("duration")),_this.init()}}(this))},initialize:function(){return null==this.$el&&(this.$el=$("#player")),this.$el.html(""),this.getInfo(function(_this){return function(){return RMP.dispatcher.trigger("progress:duration",_this.get("duration")),_this.init()}}(this))}}),VimeoPlayer=MusicPlayer.extend({type:"vimeo",events:function(){},setDuration:function(){},progress_play:function(){},playerState:"ended",event_trigger:function(){},init:function(){var player;return FLAG_DEBUG&&console.log("VimeoPlayer :: Making Player"),player=$("<iframe src='http://player.vimeo.com/video/"+this.track.id+"?api=1&autoplay=1' webkitallowfullscreen mozallowfullscreen allowfullscreen frameborder='0'>"),this.$el.append(player),this.player=player[0].contentWindow,this.player.postMessage({method:"play"},"*")},clean:function(justTheElement){return $("#player iframe").remove(),this.$el.html(""),null==justTheElement&&this.stopListening(),null==justTheElement&&this.trigger("destroy"),justTheElement?void 0:this.off},"switch":function(song){var url,video_id;return this.set(song.attributes),this.track=this.attributes.media.oembed,url=decodeURIComponent(decodeURIComponent(this.track.html)),video_id=url.match(/\/video\/(\d+)/),null!=video_id&&(this.track.id=video_id[1]),this.clean(!0),this.init()},playPause:function(){return"playing"===this.playerState?this.player.postMessage({method:"pause"},"*"):this.player.postMessage({method:"play"},"*")},seekTo:function(){},initialize:function(){var url,video_id;return null==this.$el&&(this.$el=$("#player")),this.$el.html(""),this.track=this.attributes.media.oembed,url=decodeURIComponent(decodeURIComponent(this.track.html)),video_id=url.match(/\/video\/(\d+)/),null!=video_id&&(this.track.id=video_id[1]),this.init()}}),PlayerController=Backbone.Model.extend({change:function(index,song){if(null==this.controller)return this.controller=function(){switch(!1){case"youtube"!==song.type:return new YoutubePlayer(song.attributes);case"soundcloud"!==song.type:return new SoundcloudPlayer(song.attributes);case"bandcamp"!==song.type:return new BandcampPlayer(song.attributes);case"vimeo"!==song.type:return new VimeoPlayer(song.attributes);case"mp3"!==song.type:return new MP3Player(song.attributes);default:throw"Not A Song Sent to Player Controller"}}();if(song.playable===!0){if(this.controller.type!==song.type)return this.controller.clean(),this.controller=null,this.change(index,song);if(this.controller.get("id")!==song.get("id"))return this.controller["switch"](song)}},playPause:function(){return null!=this.controller?(FLAG_DEBUG&&console.log("PlayerController : PlayPause"),this.controller.playPause()):void 0},volume:function(value){return null!=this.controller?(FLAG_DEBUG&&console.log("PlayerController :: Volume"),this.controller.volume(value)):void 0},seekTo:function(percentage,seekAhead){return null!=this.controller?this.controller.seekTo(percentage,seekAhead):void 0},initialize:function(){return this.listenTo(RMP.dispatcher,"song:change",this.change),this.listenTo(RMP.dispatcher,"controls:play",this.playPause),this.listenTo(RMP.dispatcher,"controls:volume",this.volume),this.listenTo(RMP.dispatcher,"progress:set",this.seekTo)}}),RMP.player=new PlayerController,RMP.dispatcher.once("app:main",function(){return $("<script src='https://www.youtube.com/iframe_api' />").appendTo($(".scripts")),$("<script src='https://w.soundcloud.com/player/api.js' />").appendTo($(".scripts"))}),onYouTubeIframeAPIReady=function(){return FLAG_DEBUG&&console.log("Youtube :: iFramed"),RMP.dispatcher.trigger("youtube:iframe")},KeyboardController=Backbone.Model.extend({defaults:{shifted:!1},send:function(command,e){return RMP.dispatcher.trigger(command,e)},initialize:function(){return $("body").keyup(function(_this){return function(e){return _this.get("shifted")===!0&&(40===e.keyCode?_this.send("controls:forward",e):39===e.keyCode?_this.send("controls:forward",e):37===e.keyCode?_this.send("controls:backward",e):38===e.keyCode&&_this.send("controls:backward",e),32===e.keyCode&&(_this.send("controls:play",e),e.preventDefault())),17===e.keyCode?_this.set("shifted",!1):void 0}}(this)),$("body").keydown(function(_this){return function(e){return 17===e.keyCode?_this.set("shifted",!0):void 0}}(this))}}),RMP.keyboard=new KeyboardController;